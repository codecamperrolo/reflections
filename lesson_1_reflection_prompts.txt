How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Easier to see, instead of checking line by line specially on huge codes with plenty of lines. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By having access to the history of a file I can see the gradual changes on the file and see where some coding thoughts came from. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    By having git we can save whenever we consider convenient (when a logical change is made) that way we can avoid having many versions of a file if we choose to save the file automatically. A con could be probably the programmer forgets to create commits on git, while having an automatic saver we avoid this hassle.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Since git was designed for programmers and google docs wasn't designed for programmers.

How can you use the commands git log and git diff to view the history of files?

    git log will allow me to see all the commits which are all the file versions, and git diff will compare 2 files and the output will be the changes done.

How might using version control make you more confident to make changes that
could break something?

    By allowing me to switch to previous version and to see which version is the one that introduced a bug for example. 

Now that you have your workspace set up, what do you want to try using Git for?

    Everything, make it a useful tool for debugging.
